devtools::install_github("rstudio/tensorflow")
getwd()
getwd()
devtools::install_github("rstudio/tensorflow")
library(tensorflow)
library(keras)
install_keras()
reticulate::install_python(version = '<3.13>')
reticulate::install_python(version = '3.13')
install_keras()
install_keras()
library(tensorflow)
library(keras)
install_keras()
install_tensorflow()
library(readr)
fetal_health <- read_csv("fetal_health.csv")
View(fetal_health)
data<-fetal_health
data<-as.matrix(data)
dimnames(data)<-NULL
data[,1:21] <- normalize(data[,1:21])
TF_ENABLE_ONEDNN_OPTS=0
data[,1:21] <- normalize(data[,1:21])
data[,22]<-as.numeric(data[,22])-1
summary(data)
set.seed(1807)
ind<- sample(2,nrow(data),replace = T,prob = c(0.7,0.3))
training<-data[ind==1,1:21]
test<-data[ind==2,1:21]
trainingtarget<-data[ind==1,22]
testtarget<-data[ind==2,22]
trainlabels<- to_categorical(trainingtarget)
testlabels<-to_categorical(testtarget)
print(testlabels)
testlabels<-to_categorical(testtarget)
model<-keras_model_sequential()
model %>%
layer_dense(units = 8,activation = 'relu',input_shape = c(21)) %>%
layer_dense(units = 3,activation = 'softmax')
reticulate::py_last_error()
trainlabels<- to_categorical(trainingtarget)
trainlabels<-SparseM::sparse_categorical_crossentropy(trainingtarget)
##one hot encoding
library(SparseM)
trainlabels<-to_categorical(trainingtarget)
summary(model)
model %>%
compile(loss='categorical_crossentropy',
optimizer='adam',
metrics='accuracy')
library(readr)
CTG <- read_csv("CTG.csv")
View(CTG)
library(dplyr)
data<-CTG %>%
select(LB:Tendency,NSP)
data<-CTG %>%
select(LB:Tendency,NSP,-DR)
View(data)
data<-as.matrix(data)
dimnames(data)<-NULL
data[,1:21] <- normalize(data[,1:21])
data[,22]<-as.numeric(data[,22])-1
summary(data)
set.seed(1807)
ind<- sample(2,nrow(data),replace = T,prob = c(0.7,0.3))
training<-data[ind==1,1:21]
test<-data[ind==2,1:21]
trainingtarget<-data[ind==1,22]
testtarget<-data[ind==2,22]
trainlabels<-to_categorical(trainingtarget)
testlabels<-to_categorical(testtarget)
print(testlabels)
